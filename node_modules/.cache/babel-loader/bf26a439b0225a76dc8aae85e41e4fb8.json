{"ast":null,"code":"var _jsxFileName = \"/Users/admin/tiktok/src/components/movie-list/MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './movielist.scss';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport Button from '../button/Button';\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport MovieCard from '../movie-card/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {\n        page: 1\n      }; // response = await tmdbApi.getMoviesList(category.type,{params});\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, id) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Users/admin/tiktok/src/components/movie-list/MovieList.jsx"],"names":["React","useState","useEffect","useRef","PropTypes","Swiper","SwiperSlide","Link","Button","tmdbApi","category","apiConfig","MovieCard","MovieList","props","items","setItems","getList","response","params","page","type","movie","getMoviesList","getTvList","similar","id","results","console","log","map","item","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,cAAlC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,IAAiBC,QAAjB,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,OAAO,GAAG,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAf;AAEA,YAAMC,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAf,CAHwB,CAKxB;;AACA,UAAGN,KAAK,CAACO,IAAN,KAAe,SAAlB,EAA6B;AACzB,gBAAOP,KAAK,CAACJ,QAAb;AACI,eAAKA,QAAQ,CAACY,KAAd;AACIJ,YAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACc,aAAR,CAAsBT,KAAK,CAACO,IAA5B,EAAiC;AAACF,cAAAA;AAAD,aAAjC,CAAjB;AACA;;AAEJ;AACAD,YAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACe,SAAR,CAAkBV,KAAK,CAACO,IAAxB,EAA6B;AAACF,cAAAA;AAAD,aAA7B,CAAjB;AANJ;AAQH,OATD,MASO;AACHD,QAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACgB,OAAR,CAAgBX,KAAK,CAACJ,QAAtB,EAA+BI,KAAK,CAACY,EAArC,CAAjB;AAEH;;AAEDV,MAAAA,QAAQ,CAACE,QAAQ,CAACS,OAAV,CAAR;AACH,KArBD;;AAsBAV,IAAAA,OAAO;AAGV,GA1BQ,EA0BP,EA1BO,CAAT;AA2BAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACJ,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,IADhB;AAEI,MAAA,YAAY,EAAE,EAFlB;AAGI,MAAA,aAAa,EAAE,MAHnB;AAAA,gBAMQA,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAML,EAAN,kBACN,QAAC,WAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEK,IAAjB;AAAuB,UAAA,QAAQ,EAAEjB,KAAK,CAACJ;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkBgB,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CApDD;;GAAMb,S;;KAAAA,S;AAsDNA,SAAS,CAACmB,SAAV,GAAsB;AAClBtB,EAAAA,QAAQ,EAAEN,SAAS,CAAC6B,MAAV,CAAiBC,UADT;AAElBb,EAAAA,IAAI,EAAEjB,SAAS,CAAC6B,MAAV,CAAiBC;AAFL,CAAtB;AAKA,eAAerB,SAAf","sourcesContent":["import React, {useState, useEffect,useRef} from 'react'\nimport PropTypes from 'prop-types'\nimport './movielist.scss'\nimport {Swiper, SwiperSlide} from 'swiper/react'\nimport {Link} from 'react-router-dom'\nimport Button from '../button/Button'\nimport tmdbApi, {category} from '../../api/tmdbApi'\nimport apiConfig from '../../api/apiConfig';\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n        const [items, setItems] = useState([]);\n\n        useEffect(() => {\n            const getList = async () => {\n                let response = null;\n                \n                const params = {page:1};\n\n                // response = await tmdbApi.getMoviesList(category.type,{params});\n                if(props.type !== 'similar') {\n                    switch(props.category){\n                        case category.movie:\n                            response = await tmdbApi.getMoviesList(props.type,{params});\n                            break;\n\n                        default: \n                        response = await tmdbApi.getTvList(props.type,{params});\n                    }\n                } else {\n                    response = await tmdbApi.similar(props.category,props.id);\n         \n                }\n                \n                setItems(response.results);\n            }\n            getList();\n           \n\n        },[]);\n        console.log(items)\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item,id) => (\n                        <SwiperSlide key={id}>\n                            <MovieCard item={item} category={props.category}/>\n                            {/* <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" /> */}\n                        </SwiperSlide>\n                    ))\n                }\n\n            </Swiper>\n            \n        </div>\n    )\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}