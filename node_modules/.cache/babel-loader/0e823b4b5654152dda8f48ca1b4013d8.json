{"ast":null,"code":"var _jsxFileName = \"/Users/admin/tiktok/src/components/main-slide/MainSlide.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\nimport './mainslide.scss';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useNavigate } from 'react-router-dom';\nimport 'swiper/scss';\nimport 'swiper/scss/navigation';\nimport 'swiper/scss/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainSlide = () => {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.results.slice(1, 4));\n      } catch {\n        console.log('error');\n      }\n    };\n\n    getMovies();\n  }, []);\n  console.log(movieItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-slide\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1 // autoplay={{delay: 3000,disableOnInteraction: false,}}\n      ,\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(MainSlideItem, {\n            item: item,\n            className: `${isActive ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(TrailerModal, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n\n_c = MainSlide;\n\nconst MainSlideItem = props => {\n  _s2();\n\n  let history = useNavigate();\n  const item = props.item;\n  const background = apiConfig.originImage(item.backdrop_path ? item.backdrop_path : item.poster_path); // console.log(background)\n\n  const watchNowActive = () => {\n    // history('/movie' + item.id);\n    console.log(\"dadad\");\n  };\n\n  const setModalActive = async () => {\n    const modal = document.querySelector(`modal_${item.id}`);\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n    if (videos.results.length > 0) {\n      console.log(videos.results); // const videoSrc = \"https://www.youtube.com/embed/\" + videos.results[0]\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: watchNowActive,\n            children: \"Watch now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: () => console.log(\"trailer\"),\n            children: \"Trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MainSlideItem, \"UuBpJaL/77ixlr0CeL0xEoy8mog=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = MainSlideItem;\n\nconst TrailerModal = props => {\n  _s3();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n\n  const onClose = () => {\n    iframeRef.current.setAttribute('src', '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        width: \"100%\",\n        height: \"500px\",\n        title: \"trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n\n_c3 = TrailerModal;\nexport default MainSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainSlide\");\n$RefreshReg$(_c2, \"MainSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"sources":["/Users/admin/tiktok/src/components/main-slide/MainSlide.jsx"],"names":["React","useState","useEffect","useRef","tmdbApi","category","movieType","apiConfig","Button","OutlineButton","Modal","ModalContent","SwiperCore","Autoplay","Swiper","SwiperSlide","useNavigate","MainSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","map","item","i","isActive","MainSlideItem","props","history","background","originImage","backdrop_path","poster_path","watchNowActive","setModalActive","modal","document","querySelector","id","videos","getVideos","movie","length","className","backgroundImage","title","overview","w500Image","TrailerModal","iframeRef","onClose","current","setAttribute"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef} from 'react'\nimport tmdbApi, {category, movieType} from '../../api/tmdbApi'\nimport apiConfig from '../../api/apiConfig'\nimport Button,{OutlineButton} from '../button/Button'\nimport Modal, { ModalContent } from '../modal/Modal'\nimport './mainslide.scss'\nimport SwiperCore, {Autoplay} from 'swiper'\nimport {Swiper, SwiperSlide} from 'swiper/react'\nimport { useNavigate } from 'react-router-dom';\nimport 'swiper/scss'\nimport 'swiper/scss/navigation'\nimport 'swiper/scss/pagination'\n\n\nconst MainSlide = () => {\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies =  async () => {\n            const params = {page: 1}\n            try {\n                const response =  await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1,4));\n                \n\n            } catch {\n                console.log('error')\n            }\n        }\n        getMovies();\n    }, [])\n    console.log(movieItems);\n    return (\n        <div className=\"main-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                // autoplay={{delay: 3000,disableOnInteraction: false,}}\n            >\n                {\n                movieItems.map((item,i) => (\n                    <SwiperSlide key={i}>\n                        {({isActive}) => (\n                            <MainSlideItem\n                                item={item}\n                                className={`${isActive? 'active' : ''}`}     \n                            />\n                        )}\n                    </SwiperSlide>\n                ))\n                } \n             </Swiper>\n                {movieItems.map((item,i) => <TrailerModal key={i} item={item}/>)}\n\n         </div>\n    )\n}\n\nconst MainSlideItem = props => {\n    let history = useNavigate();\n\n    const item =  props.item;\n\n    const background = apiConfig.originImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n    // console.log(background)\n\n    const watchNowActive = () => {\n        // history('/movie' + item.id);\n        console.log(\"dadad\")\n    }\n\n    const setModalActive = async () => {\n        const modal = document.querySelector(`modal_${item.id}`);\n\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n        if(videos.results.length > 0) {\n           console.log(videos.results)\n            // const videoSrc = \"https://www.youtube.com/embed/\" + videos.results[0]\n        }\n    }\n\n    return (\n        <div \n            className={`main-slide__item ${props.className}`}\n            style={{backgroundImage: `url(${background})`}}\n        >\n            <div className=\"main-slide__item__content container\">\n                <div className=\"main-slide__item__content__info\">\n                    <h2 className=\"title\">{item.title}</h2>\n                    <div className=\"overview\">{item.overview}</div>\n                    <div className=\"btns\">\n                        <Button onClick={watchNowActive}>\n                            Watch now\n                        </Button>\n                        <OutlineButton onClick={() => console.log(\"trailer\")}>\n                            Trailer\n                        </OutlineButton>\n                    </div>\n                </div>\n                <div  className=\"main-slide__item__content__poster\">\n                    <img src={apiConfig.w500Image(item.poster_path)} alt={item.title} />\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst TrailerModal = props => {\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    const onClose = () => {\n        iframeRef.current.setAttribute('src', '')\n\n    }\n\n    return (\n        <Modal active={false} id={`modal_${item.id}`}>\n            <ModalContent onClose={onClose}>\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\">\n\n                </iframe>\n            </ModalContent>\n        </Modal>\n    )\n}\n\n\n\n\nexport default MainSlide\n"]},"metadata":{},"sourceType":"module"}