{"ast":null,"code":"var _jsxFileName = \"/Users/admin/tiktok/src/components/main-slide/MainSlide.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './mainslide.scss';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useHistory } from 'react-router-dom';\nimport 'swiper/scss';\nimport 'swiper/scss/navigation';\nimport 'swiper/scss/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainSlide = () => {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.results.slice(1, 4));\n        console.log(response);\n      } catch {\n        console.log('error');\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-slide\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1,\n      autoplay: {\n        delay: 3000,\n        disableOnInteraction: false\n      },\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return (\n            /*#__PURE__*/\n            // <img src={apiConfig.originImage(item.backdrop_path)} alt=\"title\" />\n            _jsxDEV(MainSlideItem, {\n              item: item,\n              className: `${isActive ? 'active' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          );\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n\n_c = MainSlide;\n\nconst MainSlideItem = props => {\n  _s2();\n\n  let history = useHistory();\n  const item = props.item;\n  const background = apiConfig.originImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url${background}`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MainSlideItem, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = MainSlideItem;\nexport default MainSlide;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainSlide\");\n$RefreshReg$(_c2, \"MainSlideItem\");","map":{"version":3,"sources":["/Users/admin/tiktok/src/components/main-slide/MainSlide.jsx"],"names":["React","useState","useEffect","tmdbApi","category","movieType","apiConfig","SwiperCore","Autoplay","Swiper","SwiperSlide","useHistory","MainSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","delay","disableOnInteraction","map","item","i","isActive","MainSlideItem","props","history","background","originImage","backdrop_path","poster_path","className","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport tmdbApi, {category, movieType} from '../../api/tmdbApi'\nimport apiConfig from '../../api/apiConfig'\nimport './mainslide.scss'\nimport SwiperCore, {Autoplay} from 'swiper'\nimport {Swiper, SwiperSlide} from 'swiper/react'\nimport { useHistory } from 'react-router-dom';\nimport 'swiper/scss'\nimport 'swiper/scss/navigation'\nimport 'swiper/scss/pagination'\n\n\nconst MainSlide = () => {\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies =  async () => {\n            const params = {page: 1}\n            try {\n                const response =  await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1,4));\n                console.log(response);\n\n            } catch {\n                console.log('error')\n            }\n        }\n        getMovies();\n    }, [])\n\n\n    return (\n        <div className=\"main-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                autoplay={{delay: 3000,disableOnInteraction: false,}}\n            >\n                {\n                movieItems.map((item,i) => (\n                    <SwiperSlide key={i}>\n                        {({isActive}) => (\n                            // <img src={apiConfig.originImage(item.backdrop_path)} alt=\"title\" />\n                            <MainSlideItem\n                                item={item}\n                                className={`${isActive? 'active' : ''}`}     \n                            />\n                        )}\n                    </SwiperSlide>\n                ))\n                } \n\n             </Swiper>\n         </div>\n    )\n}\n\nconst MainSlideItem = props => {\n    let history = useHistory();\n\n    const item =  props.item;\n\n    const background = apiConfig.originImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n    return (\n        <div \n            className={`main-slide__item ${props.className}`}\n            style={{backgroundImage: `url${background}`}}\n        >\n\n        </div>\n    )\n}\n\n\nexport default MainSlide\n"]},"metadata":{},"sourceType":"module"}